package tk.thespislives.faucet;

import java.io.File;
import javax.swing.JFileChooser;

public class FaucetGUI extends javax.swing.JFrame {

    //Add sound and texture filters
    private final SoundFilter SoundFiles = new SoundFilter();
    private final TextureFilter TextureFiles = new TextureFilter();
    private final BlockWriter blockWriter = new BlockWriter();
    private final ItemWriter itemWriter = new ItemWriter();
    public FaucetGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        soundChooser = new javax.swing.JFileChooser();
        textureChooser = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        blockPanel = new javax.swing.JPanel();
        blockLabelIngredients = new javax.swing.JLabel();
        blockBox1 = new javax.swing.JComboBox();
        blockBox2 = new javax.swing.JComboBox();
        blockBox3 = new javax.swing.JComboBox();
        blockBox4 = new javax.swing.JComboBox();
        blockBox5 = new javax.swing.JComboBox();
        blockBox6 = new javax.swing.JComboBox();
        blockBox7 = new javax.swing.JComboBox();
        blockBox8 = new javax.swing.JComboBox();
        blockBox9 = new javax.swing.JComboBox();
        blockLabelBlockName = new javax.swing.JLabel();
        blockTextBlockName = new javax.swing.JTextField();
        blockLabelTrue = new javax.swing.JLabel();
        blockCheckOpaque = new javax.swing.JCheckBox();
        blockCheckBurnable = new javax.swing.JCheckBox();
        blockCheckGrows = new javax.swing.JCheckBox();
        blockCheckHarvestable = new javax.swing.JCheckBox();
        blockCheckGravity = new javax.swing.JCheckBox();
        blockCheckEntities = new javax.swing.JCheckBox();
        blockLabelTexture = new javax.swing.JLabel();
        blockBrowseTexture = new javax.swing.JButton();
        blockPathTexture = new javax.swing.JTextField();
        blockLabelSound = new javax.swing.JLabel();
        blockBrowseSound = new javax.swing.JButton();
        blockPathSound = new javax.swing.JTextField();
        blockLabelMaterial = new javax.swing.JLabel();
        blockBoxMaterial = new javax.swing.JComboBox();
        blockLabelValues = new javax.swing.JLabel();
        blockLabelFriction = new javax.swing.JLabel();
        blockTextFriction = new javax.swing.JTextField();
        blockLabelLightLevel = new javax.swing.JLabel();
        blockTextLightLevel = new javax.swing.JTextField();
        blockLabelHardness = new javax.swing.JLabel();
        blockTextHardness = new javax.swing.JTextField();
        blockBuildIt = new javax.swing.JButton();
        itemPanel = new javax.swing.JPanel();
        itemLabelIngredient = new javax.swing.JLabel();
        itemBox1 = new javax.swing.JComboBox();
        itemBox2 = new javax.swing.JComboBox();
        itemBox3 = new javax.swing.JComboBox();
        itemBox4 = new javax.swing.JComboBox();
        itemBox5 = new javax.swing.JComboBox();
        itemBox6 = new javax.swing.JComboBox();
        itemBox7 = new javax.swing.JComboBox();
        itemBox8 = new javax.swing.JComboBox();
        itemBox9 = new javax.swing.JComboBox();
        itemLabelTexture = new javax.swing.JLabel();
        itemTextureBrowse = new javax.swing.JButton();
        itemPathTexture = new javax.swing.JTextField();
        itemLabelName = new javax.swing.JLabel();
        itemTextBlockName = new javax.swing.JTextField();

        soundChooser.setDialogTitle("Sound File");
        soundChooser.setFileFilter(SoundFiles);

        textureChooser.setDialogTitle("Sound File");
        textureChooser.setFileFilter(SoundFiles);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Faucet");

        blockLabelIngredients.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        blockLabelIngredients.setText("Ingredients:");

        blockBox1.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox1.setToolTipText("");
        blockBox1.setName("Ingredient 1"); // NOI18N
        blockBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox1ActionPerformed(evt);
            }
        });

        blockBox2.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox2.setToolTipText("");
        blockBox2.setName("Ingredient 1"); // NOI18N
        blockBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox2ActionPerformed(evt);
            }
        });

        blockBox3.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox3.setToolTipText("");
        blockBox3.setName("Ingredient 1"); // NOI18N
        blockBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox3ActionPerformed(evt);
            }
        });

        blockBox4.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox4.setToolTipText("");
        blockBox4.setName("Ingredient 1"); // NOI18N
        blockBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox4ActionPerformed(evt);
            }
        });

        blockBox5.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox5.setToolTipText("");
        blockBox5.setName("Ingredient 1"); // NOI18N
        blockBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox5ActionPerformed(evt);
            }
        });

        blockBox6.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox6.setToolTipText("");
        blockBox6.setName("Ingredient 1"); // NOI18N
        blockBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox6ActionPerformed(evt);
            }
        });

        blockBox7.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox7.setToolTipText("");
        blockBox7.setName("Ingredient 1"); // NOI18N
        blockBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox7ActionPerformed(evt);
            }
        });

        blockBox8.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox8.setToolTipText("");
        blockBox8.setName("Ingredient 1"); // NOI18N
        blockBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox8ActionPerformed(evt);
            }
        });

        blockBox9.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        blockBox9.setToolTipText("");
        blockBox9.setName("Ingredient 1"); // NOI18N
        blockBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBox9ActionPerformed(evt);
            }
        });

        blockLabelBlockName.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        blockLabelBlockName.setText("Block Name:");

        blockTextBlockName.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        blockTextBlockName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockTextBlockNameActionPerformed(evt);
            }
        });

        blockLabelTrue.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockLabelTrue.setText("Check if true:");

        blockCheckOpaque.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockCheckOpaque.setText("Opaque");
        blockCheckOpaque.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blockCheckOpaqueStateChanged(evt);
            }
        });

        blockCheckBurnable.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockCheckBurnable.setText("Burnable");
        blockCheckBurnable.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blockCheckBurnableStateChanged(evt);
            }
        });

        blockCheckGrows.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockCheckGrows.setText("Grows");
        blockCheckGrows.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blockCheckGrowsStateChanged(evt);
            }
        });

        blockCheckHarvestable.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockCheckHarvestable.setText("Harvestable");
        blockCheckHarvestable.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blockCheckHarvestableStateChanged(evt);
            }
        });

        blockCheckGravity.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockCheckGravity.setText("Gravity");
        blockCheckGravity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blockCheckGravityStateChanged(evt);
            }
        });

        blockCheckEntities.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockCheckEntities.setText("Entities");
        blockCheckEntities.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blockCheckEntitiesStateChanged(evt);
            }
        });

        blockLabelTexture.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        blockLabelTexture.setText("Texture");

        blockBrowseTexture.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockBrowseTexture.setText("Browse:");
        blockBrowseTexture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBrowseTextureActionPerformed(evt);
            }
        });

        blockPathTexture.setEditable(false);

        blockLabelSound.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        blockLabelSound.setText("Sound");

        blockBrowseSound.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockBrowseSound.setText("Browse:");
        blockBrowseSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBrowseSoundActionPerformed(evt);
            }
        });

        blockPathSound.setEditable(false);

        blockLabelMaterial.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        blockLabelMaterial.setText("Material");

        blockBoxMaterial.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockBoxMaterial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AIR", "CACTUS", "CAKE", "CLAY", "CLOTH", "CORAL", "DRAGON_EGG", "EARTH", "FIRE", "GRASS", "ICE", "LAVA", "LEAVES", "ORE", "ORIENTABLE", "PISTON", "PLANT", "PORTAL", "PUMPKIN", "REPLACEABLE_PLANT", "SAND", "SHATTERABLE", "SNOW_BLOCK", "SNOW_LAYER", "SPONGE", "STONE", "TNT", "WATER", "WEB", "WOOD" }));
        blockBoxMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBoxMaterialActionPerformed(evt);
            }
        });

        blockLabelValues.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockLabelValues.setText("Set values:");

        blockLabelFriction.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockLabelFriction.setText("Friction:");

        blockTextFriction.setText("0");

        blockLabelLightLevel.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockLabelLightLevel.setText("Light Level");

        blockTextLightLevel.setText("0");

        blockLabelHardness.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        blockLabelHardness.setText("Hardness:");

        blockTextHardness.setText("0");

        blockBuildIt.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        blockBuildIt.setText("Build it!");
        blockBuildIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBuildItActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout blockPanelLayout = new org.jdesktop.layout.GroupLayout(blockPanel);
        blockPanel.setLayout(blockPanelLayout);
        blockPanelLayout.setHorizontalGroup(
            blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(blockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, blockPanelLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 604, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(blockBuildIt)
                        .add(24, 24, 24))
                    .add(blockPanelLayout.createSequentialGroup()
                        .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(blockLabelIngredients)
                            .add(blockPanelLayout.createSequentialGroup()
                                .add(blockLabelBlockName)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockTextBlockName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(blockPanelLayout.createSequentialGroup()
                                .add(blockBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(blockPanelLayout.createSequentialGroup()
                                .add(blockBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(blockPanelLayout.createSequentialGroup()
                                .add(blockBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockBox8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockBox9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(blockPanelLayout.createSequentialGroup()
                                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(blockCheckOpaque)
                                    .add(blockCheckGrows)
                                    .add(blockCheckGravity))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(blockCheckHarvestable)
                                    .add(blockCheckBurnable)
                                    .add(blockCheckEntities)))
                            .add(blockLabelTrue))
                        .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, blockPanelLayout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(blockPanelLayout.createSequentialGroup()
                                        .add(blockBrowseSound)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(blockPathSound))
                                    .add(blockPanelLayout.createSequentialGroup()
                                        .add(blockBrowseTexture)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(blockPathTexture, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(blockLabelSound)
                                    .add(blockLabelMaterial)
                                    .add(blockBoxMaterial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(blockLabelTexture)))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, blockPanelLayout.createSequentialGroup()
                                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(blockLabelLightLevel)
                                        .add(blockPanelLayout.createSequentialGroup()
                                            .add(14, 14, 14)
                                            .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(blockLabelFriction)
                                                .add(blockLabelHardness))))
                                    .add(blockLabelValues))
                                .add(32, 32, 32)
                                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(blockTextLightLevel)
                                    .add(blockTextFriction)
                                    .add(blockTextHardness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .add(0, 249, Short.MAX_VALUE)))
                .addContainerGap())
        );
        blockPanelLayout.setVerticalGroup(
            blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(blockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(blockPanelLayout.createSequentialGroup()
                        .add(blockLabelTexture)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(blockBrowseTexture)
                            .add(blockPathTexture, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(blockPanelLayout.createSequentialGroup()
                        .add(blockLabelIngredients)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(blockBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(blockBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(blockBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(blockPanelLayout.createSequentialGroup()
                        .add(blockLabelSound)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(blockBrowseSound)
                            .add(blockPathSound, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(23, 23, 23)
                        .add(blockLabelMaterial))
                    .add(blockPanelLayout.createSequentialGroup()
                        .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(blockBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(blockBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(blockBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(blockBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(blockBox8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(blockBox9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(blockBoxMaterial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(blockLabelBlockName)
                    .add(blockTextBlockName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(blockLabelTrue)
                    .add(blockLabelValues))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(blockCheckOpaque)
                    .add(blockCheckBurnable)
                    .add(blockLabelFriction)
                    .add(blockTextFriction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(blockCheckGrows)
                    .add(blockCheckHarvestable)
                    .add(blockLabelLightLevel)
                    .add(blockTextLightLevel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(blockPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(blockCheckEntities)
                    .add(blockCheckGravity)
                    .add(blockLabelHardness)
                    .add(blockTextHardness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(93, 93, 93)
                .add(blockBuildIt)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Blocks", blockPanel);

        itemLabelIngredient.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        itemLabelIngredient.setText("Ingredients:");

        itemBox1.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox1.setToolTipText("");
        itemBox1.setName("Ingredient 1"); // NOI18N
        itemBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox1ActionPerformed(evt);
            }
        });

        itemBox2.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox2.setToolTipText("");
        itemBox2.setName("Ingredient 1"); // NOI18N
        itemBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox2ActionPerformed(evt);
            }
        });

        itemBox3.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox3.setToolTipText("");
        itemBox3.setName("Ingredient 1"); // NOI18N
        itemBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox3ActionPerformed(evt);
            }
        });

        itemBox4.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox4.setToolTipText("");
        itemBox4.setName("Ingredient 1"); // NOI18N
        itemBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox4ActionPerformed(evt);
            }
        });

        itemBox5.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox5.setToolTipText("");
        itemBox5.setName("Ingredient 1"); // NOI18N
        itemBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox5ActionPerformed(evt);
            }
        });

        itemBox6.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox6.setToolTipText("");
        itemBox6.setName("Ingredient 1"); // NOI18N
        itemBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox6ActionPerformed(evt);
            }
        });

        itemBox7.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox7.setToolTipText("");
        itemBox7.setName("Ingredient 1"); // NOI18N
        itemBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox7ActionPerformed(evt);
            }
        });

        itemBox8.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox8.setToolTipText("");
        itemBox8.setName("Ingredient 1"); // NOI18N
        itemBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox8ActionPerformed(evt);
            }
        });

        itemBox9.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        itemBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "air", "arrow", "bed", "bedBlock", "bedrock", "birchLeaves", "birchLog", "birchSapling", "blackMusicDisc", "blackWool", "blazePowder", "blazeRod", "blueMusicDisc", "blueWool", "boat", "bone", "boneMeal", "book", "bookshelf", "bow", "bowl", "bread", "brewingStand", "brewingStandBlock", "brick", "brickDoubleSlabs", "brickSlab", "brickStairs", "brokenMusicDisc", "brownMushroom", "brownWool", "bucket", "burningfurnace", "cactus", "cactusGreen", "cake", "cakeBlock", "cauldron", "cauldronBlock", "chainBoots", "chainChestplate", "chainHelmet", "chainLeggings", "charcoal", "chest", "clay", "clayBlock", "clayBrick", "clock", "coal", "coalOre", "cobblestone", "cobblestoneDoubleSlabs", "cobblestoneSlab", "cobblestoneStairs", "cocoaBeans", "compass", "cookedChicken", "cookedFish", "cookedPorkchop", "cookie", "crackedStoneBricks", "craftingTable", "crops", "cyanDye", "cyanMusicDisc", "cyanWool", "dandelion", "dandelionYellow", "deadBush", "deadShrub", "detectorRail", "diamond", "diamondAxe", "diamondBlock", "diamondBoots", "diamondChestplate", "diamondHelmet", "diamondHoe", "diamondLeggings", "diamondOre", "diamondPickaxe", "diamondShovel", "diamondSword", "dirt", "dispenser", "dragonEgg", "egg", "enchantmentTable", "enderPearl", "endPortal", "endPortalFrame", "endStone", "eyeOfEnder", "farmland", "feather", "fence", "fenceGate", "fermentedSpiderEye", "fern", "fire", "fishingRod", "forestGreenMusicDisc", "furnace", "ghastTear", "glass", "glassBottle", "glassPane", "glowingRedstoneOre", "glowstoneBlock", "glowstoneDust", "goldAxe", "goldBlock", "goldBoots", "goldChestplate", "goldenApple", "goldHelmet", "goldHoe", "goldIngot", "goldLeggings", "goldMusicDisc", "goldNugget", "goldOre", "goldPickaxe", "goldShovel", "goldSword", "grass", "gravel", "grayDye", "greenMusicDisc", "greenWool", "greyWool", "gunpowder", "hugeBrownMushroom", "hugeRedMushroom", "ice", "inkSac", "ironAxe", "ironBars", "ironBlock", "ironBoots", "ironChestplate", "ironDoor", "ironDoorBlock", "ironHelmet", "ironHoe", "ironIngot", "ironLeggings", "ironOre", "ironPickaxe", "ironShovel", "ironSword", "jackOLantern", "jukebox", "ladders", "lapisBlock", "lapisLazuli", "lapisOre", "lava", "lavaBucket", "leather", "leatherBoots", "leatherCap", "leatherPants", "leatherTunic", "leaves", "lever", "lightBlueDye", "lightBlueWool", "lightGrayDye", "lightGreyWool", "lilyPad", "limeDye", "limeWool", "lockedChest", "log", "magentaDye", "magentaWool", "magmaCream", "map", "melonSeeds", "melonSlice", "melonStem", "milk", "minecart", "minecartChest", "minecartFurnace", "monsterSpawner", "mossStone", "mossyStoneBricks", "movedByPiston", "mushroomSoup", "mycelium", "netherBrick", "netherBrickFence", "netherBrickStairs", "netherrack", "netherWart", "netherWartBlock", "noteblock", "obsidian", "orangeDye", "orangeMusicDisc", "orangeWool", "paintings", "paper", "pinkDye", "pinkWool", "pistonBase", "pistonExtension", "pistonStickyBase", "portal", "potion", "poweredRail", "pumpkin", "pumpkinSeeds", "pumpkinStem", "purpleDye", "purpleMusicDisc", "purpleWool", "rails", "rawBeef", "rawChicken", "rawFish", "rawPorkchop", "redApple", "redMushroom", "redMusicDisc", "redstone", "redstoneOre", "redstoneRepeater", "redstoneRepeaterOff", "redstoneRepeaterOn", "redstoneTorchOff", "redstoneTorchOn", "redstoneWire", "redWool", "rose", "roseRed", "rottenFlesh", "saddle", "sand", "sandstone", "sandstoneDoubleSlabs", "sandstoneSlab", "sapling", "seeds", "shears", "sign", "signPost", "silverfishStone", "slimeball", "snow", "snowball", "snowBlock", "soulSand", "spiderEye", "sponge", "spruceLeaves", "spruceLog", "spruceSapling", "stationaryLava", "stationaryWater", "steak", "stick", "stone", "stoneAxe", "stoneBrickDoubleSlabs", "stoneBricks", "stoneBrickSlab", "stoneBrickStairs", "stoneButton", "stoneDoubleSlabs", "stoneHoe", "stonePickaxe", "stonePressurePlate", "stoneShovel", "stoneSlab", "stoneSword", "string", "sugar", "sugarCane", "sugarCaneBlock", "tallGrass", "tnt", "torch", "trapdoor", "vines", "wallSign", "water", "waterBucket", "watermelon", "web", "wheat", "whiteMusicDisc", "whiteWool", "wood", "woodenAxe", "woodenDoor", "woodenDoorBlock", "woodenDoubleSlabs", "woodenHoe", "woodenPickaxe", "woodenPressurePlate", "woodenShovel", "woodenSlab", "woodenStairs", "woodenSword", "yellowWool" }));
        itemBox9.setToolTipText("");
        itemBox9.setName("Ingredient 1"); // NOI18N
        itemBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBox9ActionPerformed(evt);
            }
        });

        itemLabelTexture.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        itemLabelTexture.setText("Texture");

        itemTextureBrowse.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        itemTextureBrowse.setText("Browse:");
        itemTextureBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTextureBrowseActionPerformed(evt);
            }
        });

        itemPathTexture.setEditable(false);

        itemLabelName.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        itemLabelName.setText("Item Name:");

        itemTextBlockName.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        itemTextBlockName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTextBlockNameActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout itemPanelLayout = new org.jdesktop.layout.GroupLayout(itemPanel);
        itemPanel.setLayout(itemPanelLayout);
        itemPanelLayout.setHorizontalGroup(
            itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(itemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(itemPanelLayout.createSequentialGroup()
                        .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(itemLabelIngredient)
                            .add(itemPanelLayout.createSequentialGroup()
                                .add(itemBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(itemBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(itemBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(itemPanelLayout.createSequentialGroup()
                                .add(itemBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(itemBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(itemBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(itemPanelLayout.createSequentialGroup()
                                .add(itemBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(itemBox8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(itemBox9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(21, 21, 21)
                        .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(itemTextureBrowse)
                            .add(itemLabelTexture)))
                    .add(itemPanelLayout.createSequentialGroup()
                        .add(itemLabelName)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(itemTextBlockName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(itemPathTexture, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );
        itemPanelLayout.setVerticalGroup(
            itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(itemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(itemPanelLayout.createSequentialGroup()
                        .add(itemLabelTexture)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(itemTextureBrowse)
                            .add(itemPathTexture, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(itemPanelLayout.createSequentialGroup()
                        .add(itemLabelIngredient)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(itemBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(itemBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(itemBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(itemBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(itemBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(itemBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(itemBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(itemBox8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(itemBox9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(32, 32, 32)
                .add(itemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(itemLabelName)
                    .add(itemTextBlockName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(322, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Items", itemPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void blockBrowseTextureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBrowseTextureActionPerformed
        int returnVal = textureChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = textureChooser.getSelectedFile();
            // What to do with the file, e.g. display it in a TextArea
            blockPathTexture.setText(file.getAbsolutePath());
            textureChooser.getSelectedFile().renameTo(new File(blockWriter.nameOfMod, "texture.png"));
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_blockBrowseTextureActionPerformed

    private void blockBrowseSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBrowseSoundActionPerformed
        int returnVal = soundChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = soundChooser.getSelectedFile();
            // What to do with the file, e.g. display it in a TextArea
            blockPathSound.setText(file.getAbsolutePath());
            soundChooser.getSelectedFile().renameTo(new File(blockWriter.nameOfMod, "sound.ogg"));
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_blockBrowseSoundActionPerformed

private void blockBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox2ActionPerformed
    blockWriter.ingredient2 = blockBox2.getSelectedItem().toString();
}//GEN-LAST:event_blockBox2ActionPerformed

    private void blockBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox1ActionPerformed
        blockWriter.ingredient1 = blockBox1.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox1ActionPerformed

    private void blockBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox3ActionPerformed
        blockWriter.ingredient3 = blockBox3.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox3ActionPerformed

    private void blockBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox4ActionPerformed
        blockWriter.ingredient4 = blockBox4.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox4ActionPerformed

    private void blockBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox5ActionPerformed
        blockWriter.ingredient5 = blockBox5.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox5ActionPerformed

    private void blockBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox6ActionPerformed
        blockWriter.ingredient6 = blockBox6.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox6ActionPerformed

    private void blockBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox7ActionPerformed
        blockWriter.ingredient7 = blockBox7.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox7ActionPerformed

    private void blockBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox8ActionPerformed
        blockWriter.ingredient8 = blockBox8.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox8ActionPerformed

    private void blockBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBox9ActionPerformed
        blockWriter.ingredient9 = blockBox9.getSelectedItem().toString();
    }//GEN-LAST:event_blockBox9ActionPerformed

    private void blockTextBlockNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockTextBlockNameActionPerformed
        blockWriter.nameOfBlock = blockTextBlockName.getText();
    }//GEN-LAST:event_blockTextBlockNameActionPerformed

    private void blockBoxMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBoxMaterialActionPerformed
        blockWriter.blockMaterial = blockBoxMaterial.getSelectedItem().toString();
    }//GEN-LAST:event_blockBoxMaterialActionPerformed

    private void blockCheckOpaqueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blockCheckOpaqueStateChanged
        blockWriter.opaque = blockCheckOpaque.isSelected();
    }//GEN-LAST:event_blockCheckOpaqueStateChanged

    private void blockCheckGrowsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blockCheckGrowsStateChanged
        blockWriter.grows = blockCheckGrows.isSelected();
    }//GEN-LAST:event_blockCheckGrowsStateChanged

    private void blockCheckGravityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blockCheckGravityStateChanged
        blockWriter.gravity = blockCheckGravity.isSelected();
    }//GEN-LAST:event_blockCheckGravityStateChanged

    private void blockCheckBurnableStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blockCheckBurnableStateChanged
        blockWriter.burns = blockCheckBurnable.isSelected();
    }//GEN-LAST:event_blockCheckBurnableStateChanged

    private void blockCheckHarvestableStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blockCheckHarvestableStateChanged
        blockWriter.canBreak = blockCheckHarvestable.isSelected();
    }//GEN-LAST:event_blockCheckHarvestableStateChanged

    private void blockCheckEntitiesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blockCheckEntitiesStateChanged
        blockWriter.entities = blockCheckEntities.isSelected();
    }//GEN-LAST:event_blockCheckEntitiesStateChanged

    private void blockBuildItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBuildItActionPerformed
        blockWriter.create();
    }//GEN-LAST:event_blockBuildItActionPerformed

    private void itemBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox1ActionPerformed
        itemWriter.ingredient1 = itemBox1.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox1ActionPerformed

    private void itemBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox2ActionPerformed
        itemWriter.ingredient2 = itemBox2.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox2ActionPerformed

    private void itemBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox3ActionPerformed
        itemWriter.ingredient2 = itemBox2.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox3ActionPerformed

    private void itemBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox6ActionPerformed
        itemWriter.ingredient6 = itemBox6.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox6ActionPerformed

    private void itemBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox9ActionPerformed
        itemWriter.ingredient9 = itemBox9.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox9ActionPerformed

    private void itemBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox8ActionPerformed
        itemWriter.ingredient8 = itemBox8.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox8ActionPerformed

    private void itemBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox5ActionPerformed
        itemWriter.ingredient5 = itemBox5.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox5ActionPerformed

    private void itemBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox4ActionPerformed
        itemWriter.ingredient4 = itemBox4.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox4ActionPerformed

    private void itemBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBox7ActionPerformed
        itemWriter.ingredient7 = itemBox7.getSelectedItem().toString();
    }//GEN-LAST:event_itemBox7ActionPerformed

    private void itemTextureBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTextureBrowseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemTextureBrowseActionPerformed

    private void itemTextBlockNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTextBlockNameActionPerformed
        itemWriter.nameOfItem = itemBox1.getSelectedItem().toString();
    }//GEN-LAST:event_itemTextBlockNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx = 0; idx < installedLookAndFeels.length; idx++) {
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FaucetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FaucetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FaucetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FaucetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FaucetGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox blockBox1;
    private javax.swing.JComboBox blockBox2;
    private javax.swing.JComboBox blockBox3;
    private javax.swing.JComboBox blockBox4;
    private javax.swing.JComboBox blockBox5;
    private javax.swing.JComboBox blockBox6;
    private javax.swing.JComboBox blockBox7;
    private javax.swing.JComboBox blockBox8;
    private javax.swing.JComboBox blockBox9;
    private javax.swing.JComboBox blockBoxMaterial;
    private javax.swing.JButton blockBrowseSound;
    private javax.swing.JButton blockBrowseTexture;
    private javax.swing.JButton blockBuildIt;
    private javax.swing.JCheckBox blockCheckBurnable;
    private javax.swing.JCheckBox blockCheckEntities;
    private javax.swing.JCheckBox blockCheckGravity;
    private javax.swing.JCheckBox blockCheckGrows;
    private javax.swing.JCheckBox blockCheckHarvestable;
    private javax.swing.JCheckBox blockCheckOpaque;
    private javax.swing.JLabel blockLabelBlockName;
    private javax.swing.JLabel blockLabelFriction;
    private javax.swing.JLabel blockLabelHardness;
    private javax.swing.JLabel blockLabelIngredients;
    private javax.swing.JLabel blockLabelLightLevel;
    private javax.swing.JLabel blockLabelMaterial;
    private javax.swing.JLabel blockLabelSound;
    private javax.swing.JLabel blockLabelTexture;
    private javax.swing.JLabel blockLabelTrue;
    private javax.swing.JLabel blockLabelValues;
    private javax.swing.JPanel blockPanel;
    private javax.swing.JTextField blockPathSound;
    private javax.swing.JTextField blockPathTexture;
    private javax.swing.JTextField blockTextBlockName;
    private javax.swing.JTextField blockTextFriction;
    private javax.swing.JTextField blockTextHardness;
    private javax.swing.JTextField blockTextLightLevel;
    private javax.swing.JComboBox itemBox1;
    private javax.swing.JComboBox itemBox2;
    private javax.swing.JComboBox itemBox3;
    private javax.swing.JComboBox itemBox4;
    private javax.swing.JComboBox itemBox5;
    private javax.swing.JComboBox itemBox6;
    private javax.swing.JComboBox itemBox7;
    private javax.swing.JComboBox itemBox8;
    private javax.swing.JComboBox itemBox9;
    private javax.swing.JLabel itemLabelIngredient;
    private javax.swing.JLabel itemLabelName;
    private javax.swing.JLabel itemLabelTexture;
    private javax.swing.JPanel itemPanel;
    private javax.swing.JTextField itemPathTexture;
    private javax.swing.JTextField itemTextBlockName;
    private javax.swing.JButton itemTextureBrowse;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JFileChooser soundChooser;
    private javax.swing.JFileChooser textureChooser;
    // End of variables declaration//GEN-END:variables
}
